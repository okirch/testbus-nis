#!/bin/bash
#
# This is a draft idea of how headers for testbus scripts
# could be used to drive the setup
##################################################################
# Start-Testbus-Requirements
# Instances		2
# Bridged-Network	yes
# Instance-NICs		1
# End-Testbus-Requirements
##################################################################

NISDOMAIN=nistest.opensuse.org
USE_YAST=true

# TESTBUS_SELFTEST_DEBUG=all

. /usr/share/testbus/functions
. $0.functions

TMPDIR=/tmp/testbus-nis
mkdir -p $TMPDIR

# Override the timeout for claiming the host.
# Bringing up a VM guest can take some time, especially if it goes
# through a firstboot stage first.
TESTBUS_CLAIM_TIMEOUT=240

##################################################################
# Start testing
##################################################################
testbus_group_begin $0

if ! testbus_claim_node server; then
	testbus_exit_fail "unable to claim server"
fi
testbus_node_get_handle server NIS_SERVER

if ! testbus_claim_node client; then
	testbus_exit_fail "unable to claim client"
fi
testbus_node_get_handle client NIS_CLIENT

if ! testbus_node_get_ipv4addr server NIS_SERVER_IP || test -z $NIS_SERVER_IP; then
	testbus_exit_fail "No IP address for server"
fi
if ! testbus_node_get_ipv4addr client NIS_CLIENT_IP || test -z $NIS_CLIENT_IP; then
	testbus_exit_fail "No IP address for client"
fi

if ! testbus_node_get_name server NIS_SERVER_NAME || test -z $NIS_SERVER_NAME; then
	testbus_exit_fail "No hostname address for server"
fi
if ! testbus_node_get_name client NIS_CLIENT_NAME || test -z $NIS_CLIENT_NAME; then
	testbus_exit_fail "No hostname address for client"
fi

cat <<EOF
Claimed hosts
Server:  $NIS_SERVER_NAME ($NIS_SERVER_IP)
Client:  $NIS_CLIENT_NAME ($NIS_CLIENT_IP)
EOF

##################################################################
# Initialize NIS server
##################################################################
testbus_group_begin server-init

testbus_trace "server: setting up NIS server"

# I would have loved to use yast2 for this, but right now it always
# wants _at least_ a pipe on stdout, preferably a tty. If you make it
# write to anything else, it'll just die quietly.
if $USE_YAST; then
	testbus_test_begin yastconfig
	nis_run server --use-terminal /sbin/yast2 nis-server master domain=$NISDOMAIN yppasswd=yes verbose
else
	testbus_test_begin config

	testbus_trace "server: setting nis domain to $NISDOMAIN"
	nis_run server /bin/domainname $NISDOMAIN

	testbus_trace "server: building default NIS maps"
	nis_run server /usr/bin/make -C /var/yp

	testbus_trace "server: starting ypserv"
	nis_run server /etc/init.d/ypserv start

	testbus_trace "server: starting yppasswdd"
	nis_run server /etc/init.d/yppasswdd start
fi

testbus_test_begin verify-ypserv
nis_run server /sbin/rpcinfo -u localhost ypserv

testbus_test_begin verify-yppasswdd
nis_run server /sbin/rpcinfo -u localhost yppasswdd

testbus_group_finish

##################################################################
# Initialize NIS client
##################################################################
testbus_group_begin client-init

if $USE_YAST; then
	testbus_test_begin yastconfig

	# Very important caveat: We need to start rpcbind before enabling NIS.
	# Otherwise, rpcbind will hang on startup (NIS domain already set,
	# so getaddrinfo(3) will try to do a NIS query, and thus tries to ask
	# rpcbind to resolve service names such as rpcbind. Bleah.
	nis_run client /usr/bin/systemctl enable rpcbind.service
	nis_run client /usr/bin/systemctl start rpcbind.service

	nis_run client --use-terminal /sbin/yast2 nis enable domain=$NISDOMAIN server="$NIS_SERVER_IP"
	# nis_run client --use-terminal /sbin/yast2 nis summary

	testbus_test_begin check-domain
	domain=`nis_run client /bin/domainname`
	if [ -z "$domain" -o "$domain" != "$NISDOMAIN" ]; then
		testbus_test_failure "yast failed to set the domain name"

		testbus_test_begin override-domain
		nis_run client /bin/domainname $NISDOMAIN
	fi

	testbus_trace "client: starting ypbind"
	testbus_test_begin restart
	nis_run client /etc/init.d/ypbind restart
	nis_run client /usr/bin/systemctl status ypbind.service
else
	testbus_trace "client: uploading config files"
	testbus_test_begin config
	echo $NISDOMAIN |
		testbus_upload_file $NIS_CLIENT - /etc/defaultdomain
	echo "domain $NISDOMAIN server $NIS_SERVER_IP" |
		testbus_upload_file $NIS_CLIENT - /etc/yp.conf

	nis_run_script client - <<-EOF
	#!/bin/sh

	if ! grep -qs '^+$' /etc/passwd; then
		echo + >> /etc/passwd
	fi
	if ! grep -qs '^+$' /etc/shadow; then
		echo + >> /etc/shadow
	fi

	if ! grep -qs '^password.*pam_unix\.so.*nis' /etc/pam.d/common-password; then
		sed -i '/^password.*pam_unix\.so/!b;/\<nis\>/b;s/$/ nis debug/' /etc/pam.d/common-password
	fi

	exit 0
EOF

	testbus_trace "client: starting ypbind"
	nis_run client /etc/init.d/ypbind restart
fi

nis_verify_binding $NIS_SERVER_IP

testbus_group_finish

##################################################################
# Try NIS host resolution
##################################################################
testbus_test_begin nis-hosts

# Change nsswitch.conf
testbus_trace "configure client to use NIS for host lookups"
nis_run client /bin/cp /etc/nsswitch.conf /etc/nsswitch.conf.save
echo "hosts: files nis" |
	testbus_upload_file $NIS_CLIENT - /etc/nsswitch.conf

# On the server, generates the hosts.* maps
testbus_trace "configuring server to generate hosts.* maps"
nis_run server /usr/bin/make -C /var/yp/$NISDOMAIN -f /var/yp/Makefile hosts

# Make sure ping in general works
testbus_trace "verify name resolution"
nis_run client /bin/ping -c 1 127.0.0.1
nis_run client /bin/ping -c 1 $NIS_SERVER_IP
# Check that we can resolve the server's hostname
nis_run client /bin/ping -c 1 $NIS_SERVER_NAME
# Check that we can still resolve the client's hostname (which should be
# in the hosts file)
nis_run client /bin/ping -c 1 $NIS_CLIENT_NAME

# Restore nsswitch.conf
testbus_trace "client side cleanup"
nis_run client /bin/mv /etc/nsswitch.conf.save /etc/nsswitch.conf

##################################################################
# Try NIS user name resolution
##################################################################
testbus_group_begin nis-users

# Do not change nsswitch.conf - it should have passwd in compat mode
# by default.

##################################################################
# On the server, generates the hosts.* maps
testbus_test_begin "mapgen"
testbus_trace "configuring server to generate passwd.* maps"
nis_run server /usr/bin/make -C /var/yp/$NISDOMAIN -f /var/yp/Makefile passwd group
testbus_test_success

##################################################################
# Make sure map dumping in general works
testbus_trace "make sure passwd and group maps exist"
nis_verify_ypcat "passwd1" passwd
nis_verify_ypcat "passwd2" passwd.byname
nis_verify_ypcat "passwd3" passwd.byuid
nis_verify_ypcat "group1"  group
nis_verify_ypcat "group2"  group.byname
nis_verify_ypcat "group3"  group.bygid

##################################################################
testbus_group_begin "adduser"
USERNAME="testbus"
USERPASS="T3stbus@"
USERUID="666"
NEWUSERPASS="S0eL1te!"

testbus_test_begin "system-add"
if $USE_YAST; then
	nis_run server --use-terminal /sbin/yast2 users add username=$USERNAME uid=$USERUID password=$USERPASS no_home
else
	HASHPASS=`mkpasswd -m sha-256 $USERPASS`
	nis_run server /usr/sbin/useradd --uid $USERUID --password $HASHPASS $USERNAME
fi

# Even Yast does not rebuild the maps automatically
if ! __nis_run client /usr/bin/ypmatch $USERNAME passwd.byname >/dev/null 2>&1; then
	testbus_trace "useradd did not automatically rebuild NIS maps, tsk tsk tsk"
	nis_run server /usr/bin/make -C /var/yp/$NISDOMAIN -f /var/yp/Makefile passwd
fi

testbus_group_finish

##################################################################
nis_verify_ypmatch "verify-name" $USERNAME passwd.byname
nis_verify_ypmatch "verify-uid"  $USERUID  passwd.byuid

# Try nsswitch lookup
testbus_test_begin "id"
nis_run client /usr/bin/id $USERNAME

testbus_test_begin "groups"
nis_run client /usr/bin/groups $USERNAME

# Try to authenticate via PAM
testbus_test_begin "pam-authenticate"
nis_run client /bin/pam-test --debug --pam-service login --username testbus --password $USERPASS authenticate

# Try to change the password
# This seems to be buggy in openSUSE right now
testbus_test_begin "pam-chauthtok"
nis_run client /bin/pam-test --debug --pam-service passwd --username testbus --old-password $USERPASS --new-password "$NEWUSERPASS" chauthtok authenticate

# Now delete the account
##################################################################
testbus_group_begin "deluser"

testbus_test_begin "system-del"
if $USE_YAST; then
	nis_run server --use-terminal /sbin/yast2 users delete username=$USERNAME
else
	nis_run server /usr/bin/userdel $USERNAME
	nis_run server /usr/bin/make -C /var/yp/$NISDOMAIN -f /var/yp/Makefile passwd
fi

# Even Yast does not rebuild the maps automatically
if __nis_run client /usr/bin/ypmatch $USERNAME passwd.byname >/dev/null 2>&1; then
	testbus_trace "userdel did not automatically rebuild NIS maps, tsk tsk tsk"
	nis_run server /usr/bin/make -C /var/yp/$NISDOMAIN -f /var/yp/Makefile passwd
fi

testbus_group_finish

##################################################################
nis_verify_ypmatch "verify-name-gone" $USERNAME passwd.byname fail
nis_verify_ypmatch "verify-uid-gone"  $USERUID  passwd.byuid  fail

testbus_group_finish

##################################################################
# Try binding by broadcast
##################################################################
testbus_group_begin nis-broadcast

testbus_test_begin rebind
echo "broadcast" |
	testbus_upload_file $NIS_CLIENT - /etc/yp.conf
if nis_run client /etc/init.d/ypbind restart; then
	nis_verify_binding $NIS_SERVER_IP
else
	nis_run client /usr/bin/systemctl status ypbind.service
fi

##################################################################
# Try restarting rpcbind. This should not hang
##################################################################
testbus_test_begin restart-rpcbind
testbus_trace "Restarting rpcbind - if this times out, rpcbind gets stuck in NIS calls (which it should avoid)"
nis_run client --timeout 30 /usr/bin/systemctl restart rpcbind.service

testbus_exit
